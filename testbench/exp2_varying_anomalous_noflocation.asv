%% Outlying score Experiment 2: Varying number of anomalous locations vs auc
% 
%
%% Set Project Path
clear all
mfilePath = mfilename('fullpath');
if contains(mfilePath,'LiveEditorEvaluationHelper')
    mfilePath = matlab.desktop.editor.getActiveFilename;
end
folder_path = strsplit(mfilePath,filesep);
repo_path = join([folder_path(1:end-2)],filesep);
repo_path = repo_path{1};
data_path = [repo_path,filesep,'data'];
src_path = [repo_path,filesep,'src'];
tenandet_path = [repo_path,filesep,'tenandet'];
testbench_path = [repo_path,filesep,'testbench'];
addpath(genpath(data_path), genpath(src_path),genpath(tenandet_path), genpath(testbench_path));
clear folder_path mfilePath repo_path data_path testbench_path src_path tenandet_path

%% Load NYC data 
sizes = [144,7,52,10];                                      
load nyc_tensors.mat
load regions.mat
arrs = squeeze(sum(reshape(arrs,6,24,365,[]),1)); 
Y = double(reshape(arrs(:,1:364,regions), 24, 7, 52,[]));% Select 81 zones
Y(:,1,53,:) = arrs(:,365,regions);
% Fill in the last week with the mean of other weeks
Y(:,2:7,53,:) = mean(Y(:,2:7,1:52,:),3);
sz = size(Y);
%% Experiment variables
% Control variables     -------
cs = 5;  % Range of anomaly amplitudes
NoT = 1;            % Number of trials
LoA = 8;            % Length of anomalies
% Independent variables -------
NoAD = [1,2,4,8,16,32,48];           % Number of anomalous locations
NoA = 100*NoAD;     % Total number of anomalies 
% Dependent variable    -------
os = zeros(81,length(cs),NoT);% Outlying scores
auc = zeros(length(NoAD),NoT); 
%% 
% 
for i=1:length(NoAD)
    for t=1:NoT
    % Create anomalies ------------
    select_loc = randperm(81,NoAD(i));
    Anomaly_mask = zeros(sz);
    a = zeros([sz(1:3),5]);
    [a, anomaly_mask] = add_persistent_anomaly(Y(:,:,:,select_loc),LoA,NoA(i),cs,1);
    Yn = Y;
    Yn(:,:,:,select_loc) = Y(:,:,:,select_loc) + a;
    Anomaly_mask(:,:,:,select_loc) = anomaly_mask;
    
    % Run LOSS ------------------
    param = set_params(Yn);
    param.lambda=5e-2;
    param.gamma=5e-2;
    param.err_tol=1e-4;
    param.max_iter=200;

    [L,S,~,~]= loss(Yn, param);

    outlying_score = zeros(81,1);
    % Calculate outlying score ----
    Sn = cell(81,1);
    for n =1:81
        Sn{n}= squeeze(S(:,:,:,n));
    end
    for n=1:81
        z = Sn{n}; 
        [outlying_score(n), ~]= outlying_function2(z,Sn,80,1e-3,0);
    end
    
    labels= zeros(81,1);%{'Normal'};
    %labels =repmat(labels,81,1);
    for k=select_loc
        labels(k) = 1;%'Anomaly'; 
    end
%     classNames = cell(2,1);
%     classNames{1}='Normal';
%     classNames{2}='Anomaly';
    score = [-outlying_score(:,i,t),outlying_score(:,i,t)];
    %rocObj = perfcurve(labels,score,classNames);
    [~,~,~,auc(i,t)] = perfcurve(labels,score,'Anomaly');
    %auc(i,t) = rocObj.AUC(1);
    end
end

